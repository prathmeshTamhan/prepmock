{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\prepmock\\\\client\\\\src\\\\pages\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState('');\n  async function loginUser(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:1337/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (data.user) {\n      localStorage.setItem('token', data.user);\n      alert('Login successful');\n      window.location.href = '/dashboard';\n    } else {\n      alert('Please check your username and password');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginUser,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"lh9R1KFAw9NHXj1srS2YOsy2Vww=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Login","email","setEmail","password","setPassword","loginUser","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","user","localStorage","setItem","alert","window","location","href","e","target","value"],"sources":["C:/Projects/prepmock/client/src/pages/Login.jsx"],"sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\")\r\n\tconst [password, setPassword] = useState('')\r\n\r\n\tasync function loginUser(event) {\r\n\t\tevent.preventDefault()\r\n\r\n\t\tconst response = await fetch('http://localhost:1337/login', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t}),\r\n\t\t})\r\n\r\n\t\tconst data = await response.json()\r\n\r\n\t\tif (data.user) {\r\n\t\t\tlocalStorage.setItem('token', data.user)\r\n\t\t\talert('Login successful')\r\n\t\t\twindow.location.href = '/dashboard'\r\n\t\t} else {\r\n\t\t\talert('Please check your username and password')\r\n\t\t}\r\n\t}\r\n\r\n  return (\r\n    <div>\r\n        <h1>Login</h1>\r\n\t\t\t<form onSubmit={loginUser}>\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t/>\r\n\t\t\t\t<br />\r\n\t\t\t\t<input type=\"submit\" value=\"Login\" />\r\n\t\t\t</form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA;AAErC,SAASC,KAAK,GAAG;EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE5C,eAAeM,SAAS,CAACC,KAAK,EAAE;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR,cAAc,EAAE;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACpBb,KAAK;QACLE;MACD,CAAC;IACF,CAAC,CAAC;IAEF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,EAAE;IAElC,IAAID,IAAI,CAACE,IAAI,EAAE;MACdC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACE,IAAI,CAAC;MACxCG,KAAK,CAAC,kBAAkB,CAAC;MACzBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,YAAY;IACpC,CAAC,MAAM;MACNH,KAAK,CAAC,yCAAyC,CAAC;IACjD;EACD;EAEC,oBACE;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACnB;MAAM,QAAQ,EAAEf,SAAU;MAAA,wBACzB;QACC,KAAK,EAAEJ,KAAM;QACb,QAAQ,EAAGuB,CAAC,IAAKtB,QAAQ,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC1C,IAAI,EAAC,OAAO;QACZ,WAAW,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAClB,eACF;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QACC,KAAK,EAAEvB,QAAS;QAChB,QAAQ,EAAGqB,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAC7C,IAAI,EAAC,UAAU;QACf,WAAW,EAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QACrB,eACF;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC/B;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEV;AAAC,GAnDQ1B,KAAK;AAAA,KAALA,KAAK;AAqDd,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module"}